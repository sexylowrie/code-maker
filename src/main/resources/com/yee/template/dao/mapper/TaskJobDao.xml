<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.sunce.codemaker.dao.TaskJobDao">
  <resultMap id="BaseResultMap" type="xin.sunce.codemaker.entity.TaskJob">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="optimistic" jdbcType="INTEGER" property="optimistic"/>
    <result column="status" jdbcType="VARCHAR" property="status"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
    <result column="bussiness_no" jdbcType="VARCHAR" property="bussinessNo"/>
    <result column="bussiness_type" jdbcType="VARCHAR" property="bussinessType"/>
    <result column="times" jdbcType="INTEGER" property="times"/>
    <result column="content" jdbcType="VARCHAR" property="content"/>
    <result column="remark" jdbcType="VARCHAR" property="remark"/>
    <result column="next_execute_time" jdbcType="TIMESTAMP" property="nextExecuteTime"/>
    <result column="time" jdbcType="INTEGER" property="time"/>
    <result column="ip" jdbcType="VARCHAR" property="ip"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, optimistic, status, create_time, last_update_time, bussiness_no, bussiness_type,
    times, content, remark, next_execute_time, time, ip
  </sql>
  <sql id="Table_Name">
    task_job_pay
  </sql>
  <select id="selectByExample" parameterType="xin.sunce.codemaker.entity.TaskJobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from
    <include refid="Table_Name"/>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize !=null ">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    <include refid="Table_Name"/>
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from
    <include refid="Table_Name"/>
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="xin.sunce.codemaker.entity.TaskJobExample">
    delete from
    <include refid="Table_Name"/>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insertSelective" parameterType="xin.sunce.codemaker.entity.TaskJob">
    insert into
    <include refid="Table_Name"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="optimistic != null">
        optimistic,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="bussinessNo != null">
        bussiness_no,
      </if>
      <if test="bussinessType != null">
        bussiness_type,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="nextExecuteTime != null">
        next_execute_time,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="optimistic != null">
        #{optimistic,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bussinessNo != null">
        #{bussinessNo,jdbcType=VARCHAR},
      </if>
      <if test="bussinessType != null">
        #{bussinessType,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="nextExecuteTime != null">
        #{nextExecuteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xin.sunce.codemaker.entity.TaskJobExample" resultType="java.lang.Long">
    select count(*) from
    <include refid="Table_Name"/>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update
    <include refid="Table_Name"/>
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bussinessNo != null">
        bussiness_no = #{record.bussinessNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bussinessType != null">
        bussiness_type = #{record.bussinessType,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null">
        times = #{record.times,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.nextExecuteTime != null">
        next_execute_time = #{record.nextExecuteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      optimistic = optimistic + 1,
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xin.sunce.codemaker.entity.TaskJob">
    update
    <include refid="Table_Name"/>
    <set>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bussinessNo != null">
        bussiness_no = #{bussinessNo,jdbcType=VARCHAR},
      </if>
      <if test="bussinessType != null">
        bussiness_type = #{bussinessType,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="nextExecuteTime != null">
        next_execute_time = #{nextExecuteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      optimistic = optimistic + 1,
    </set>
    where id = #{id,jdbcType=BIGINT} and optimistic = #{optimistic,jdbcType=INTEGER}
  </update>

</mapper>
